# 1st solution
# O(mn^2) time | O(n) space
class Solution:
    def minMalwareSpread(self, graph: List[List[int]], initial: List[int]) -> int:
        n = len(graph)
        g = [[] for _ in range(n)]
        for i in range(n):
            for j in range(i + 1, n):
                if graph[i][j] == 1:
                    g[i].append(j)
                    g[j].append(i)

        def getCounts(level):
            val = len(level)
            visited = [False for _ in range(n)]
            for node in level:
                visited[node] = True
            while level:
                newLevel = []
                for node in level:
                    for neig in g[node]:
                        if visited[neig] or not valid[neig]:
                            continue
                        newLevel.append(neig)
                        visited[neig] = True
                        val += 1
                level = newLevel
            return val
        
        valid = [True for _ in range(n)]
        ans = None
        count = n + 1
        for i in range(len(initial)):
            node = initial[i]
            valid[node] = False
            v = getCounts(initial[:i] + initial[i+1:])
            if v < count:
                ans = node
            elif v == count and node < ans:
                ans = node
            count = min(count, v)
            valid[node] = True
        return ans